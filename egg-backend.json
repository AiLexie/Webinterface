{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2023-08-10T16:19:06+02:00",
    "name": "Backend",
    "author": "presti@presti.me",
    "description": "A Egg for the Ree6 Webinterface Bacckend",
    "features": null,
    "docker_images": {
        "ghcr.io\/parkervcp\/yolks:java_17": "ghcr.io\/parkervcp\/yolks:java_17"
    },
    "file_denylist": [],
    "startup": "java -Dserver.port={{SERVER_PORT}} -jar Webinterface.jar",
    "config": {
        "files": "{\r\n  \"config.yml\": {\r\n    \"parser\": \"yaml\",\r\n    \"find\": {\r\n      \"hikari.sql.user\": \"{{server.build.env.DATABASE_USER}}\",\r\n      \"hikari.sql.db\": \"{{server.build.env.DATABASE_DB}}\",\r\n      \"hikari.sql.pw\": \"{{server.build.env.DATABASE_PASSWORD}}\",\r\n      \"hikari.sql.host\": \"{{server.build.env.DATABASE_HOST}}\",\r\n      \"hikari.sql.port\": \"{{server.build.env.DATABASE_PORT}}\",\r\n      \"hikari.misc.storage\": \"{{server.build.env.DATABASE_TYP}}\",\r\n      \"hikari.misc.storageFile\": \"{{server.build.env.DATABASE_FILE}}\",\r\n      \"hikari.misc.createEmbeddedServer\": \"{{server.build.env.DATABASE_EMBED}}\",\r\n      \"hikari.misc.poolSize\": \"{{server.build.env.DATABASE_POOL}}\",\r\n      \"twitch.client.id\": \"{{server.build.env.TWITCH_ID}}\",\r\n      \"twitch.client.secret\": \"{{server.build.env.TWITCH_SECRET}}\",\r\n      \"discord.bot.tokens.release\": \"{{server.build.env.DISCORD_TOKEN}}\",\r\n      \"discord.client.id\": \"{{server.build.env.DISCORD_ID}}\",\r\n      \"discord.client.secret\": \"{{server.build.env.DISCORD_SECRET}}\",\r\n      \"discord.client.shards\": \"{{server.build.env.DISCORD_SHARDS}}\",\r\n      \"webinterface.discordRedirect\": \"{{server.build.env.WEB_DISCORD}}\",\r\n      \"webinterface.twitchRedirect\": \"{{server.build.env.WEB_TWITCH}}\",\r\n      \"webinterface.errorRedirect\": \"{{server.build.env.WEB_ERROR}}\",\r\n      \"webinterface.loginRedirect\": \"{{server.build.env.WEB_LOGIN}}\",\r\n      \"webinterface.allowedDomains\": \"{{server.build.env.WEB_DOMAINS}}\"\r\n    }\r\n  }\r\n}",
        "startup": "{\r\n    \"done\": \"Started WebinterfaceAplication\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "## this is a simple script to use the github API for release versions.\r\n## this requires the egg has a variable for GITHUB_PACKAGE, VERSION and MATCH (match is to match the filename in some way)\r\n## this supports using oauth\/personal access tokens via GITHUB_USER and GITHUB_OAUTH_TOKEN (both are required.)\r\n## if you are getting hit with GitHub API limit issues then you need to have the user and token set.\r\napt update\r\napt install -y curl jq\r\n\r\n## get release info and download links\r\nLATEST_JSON=$(curl --silent \"https:\/\/api.github.com\/repos\/Ree6-Applications\/Webinterface\/releases\/latest\")\r\nRELEASES=$(curl --silent \"https:\/\/api.github.com\/repos\/Ree6-Applications\/Webinterface\/releases\")\r\n\r\nMATCH=Webinterface-Backend-\r\n\r\n\r\nif [ -z \"${VERSION}\" ] || [ \"${VERSION}\" == \"latest\" ]; then\r\n    DOWNLOAD_URL=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url | grep -i \"${MATCH}\" | head -1 )\r\nelse\r\n    VERSION_CHECK=$(echo ${RELEASES} | jq -r --arg VERSION \"${VERSION}\" '.[] | select(.tag_name==$VERSION) | .tag_name')\r\n    if [ \"${VERSION}\" == \"${VERSION_CHECK}\" ]; then\r\n        DOWNLOAD_URL=$(echo ${RELEASES} | jq -r --arg VERSION \"${VERSION}\" '.[] | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -i \"${MATCH}\" | head -1)\r\n    else\r\n        echo -e \"defaulting to latest release\"\r\n        DOWNLOAD_URL=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url | grep -i *.jar)\r\n    fi\r\nfi\r\n\r\n## Backend Setup\r\n[ ! -d \/mnt\/server ] && mkdir -p \/mnt\/server\r\n\r\nif [ ! -z \"${DOWNLOAD_URL}\" ]; then \r\n    if curl --output \/dev\/null --silent --head --fail ${DOWNLOAD_URL}; then\r\n        echo -e \"link is valid. setting download link to ${DOWNLOAD_URL}\"\r\n        DOWNLOAD_LINK=${DOWNLOAD_URL}\r\n    else        \r\n        echo -e \"link is invalid closing out\"\r\n        exit 2\r\n    fi\r\nfi\r\n\r\ncd \/mnt\/server\r\necho -e \"\\nInstalling\/Updating Backend...\\n\"\r\n\r\nif [ -f Webinterface.jar ]; then\r\n    echo -e \"Updating Webinterface.jar to latest version...\"\r\n    echo -e '\\t(Old version can be found at \"Webinterface.jar-old\")'\r\n    mv -f Webinterface.jar Webinterface.jar-old\r\nfi\r\n\r\necho -e \"Running: curl -sSL -o Webinterface.jar ${DOWNLOAD_LINK}\\n\"\r\ncurl -sSL -o  Webinterface.jar ${DOWNLOAD_LINK}\r\n\r\nif [ -f config.yml ]; then\r\n    echo -e \"Updating config.yml to latest version...\"\r\n    echo -e '\\t(Old version can be found at \"config.yml-old\")'\r\n    mv -f config.yml config.yml-old\r\nfi\r\n\r\necho -e \"\\nBackend Successfully Installed!\"",
            "container": "debian:bullseye-slim",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Database Username",
            "description": "",
            "env_variable": "DATABASE_USER",
            "default_value": "root",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|max:32",
            "field_type": "text"
        },
        {
            "name": "Database Name",
            "description": "",
            "env_variable": "DATABASE_DB",
            "default_value": "root",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|max:64",
            "field_type": "text"
        },
        {
            "name": "Database Password",
            "description": "",
            "env_variable": "DATABASE_PASSWORD",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:128",
            "field_type": "text"
        },
        {
            "name": "Database Host",
            "description": "",
            "env_variable": "DATABASE_HOST",
            "default_value": "localhost",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:128",
            "field_type": "text"
        },
        {
            "name": "Database Port",
            "description": "",
            "env_variable": "DATABASE_PORT",
            "default_value": "3306",
            "user_viewable": true,
            "user_editable": true,
            "rules": "integer",
            "field_type": "text"
        },
        {
            "name": "Database Typ",
            "description": "The Typ of the Database Ree6 should use!\r\nPossible typs:\r\n- mariadb\r\n- sqlite\r\n- h2\r\n- postgres",
            "env_variable": "DATABASE_TYP",
            "default_value": "sqlite",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|in:mariadb,sqlite,postgres,postregsql,h2,h2-server",
            "field_type": "text"
        },
        {
            "name": "Database File",
            "description": "",
            "env_variable": "DATABASE_FILE",
            "default_value": "storage\/Ree6.db",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:32",
            "field_type": "text"
        },
        {
            "name": "[DEV] Database Poolsize",
            "description": "Only change this if you know what you are doing!",
            "env_variable": "DATABASE_POOL",
            "default_value": "10",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "Twitch Client Id",
            "description": "Twitch Application Configuration, used for the StreamTools and Twitch Notifications.",
            "env_variable": "TWITCH_ID",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:128",
            "field_type": "text"
        },
        {
            "name": "Twitch Client Secret",
            "description": "Twitch Application Configuration, used for the StreamTools and Twitch Notifications.",
            "env_variable": "TWITCH_SECRET",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:128",
            "field_type": "text"
        },
        {
            "name": "[REQUIRED] Discord Token",
            "description": "The token for your Discord bot. Learn how to obtain a token and configure your bot application properly here: https:\/\/jmusicbot.com\/getting-a-bot-token\/",
            "env_variable": "DISCORD_TOKEN",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Discord Client Id",
            "description": "Discord Application Configuration, used to allow Discord User Authentication.",
            "env_variable": "DISCORD_ID",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "Discord Client Secret",
            "description": "Discord Application Configuration, used to allow Discord User Authentication.",
            "env_variable": "DISCORD_SECRET",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Discord Shards",
            "description": "The shard amount of the Bot.\r\nCheck out https:\/\/anidiots.guide\/understanding\/sharding\/#sharding for more information.",
            "env_variable": "DISCORD_SHARDS",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|integer",
            "field_type": "text"
        },
        {
            "name": "Discord Redirect",
            "description": "The Frontend Url the User should be redirected to after a successful authentication process.",
            "env_variable": "WEB_DISCORD",
            "default_value": "https:\/\/cp.ree6.de\/login",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Twitch Redirect",
            "description": "The Frontend Url the User should be redirected to after a successful authentication process.",
            "env_variable": "DISCORD_TWITCH",
            "default_value": "https:\/\/cp.ree6.de\/twitch",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Error Redirect",
            "description": "The Frontend Url the User should be redirected to when a error occurs.",
            "env_variable": "WEB_ERROR",
            "default_value": "https:\/\/cp.ree6.de\/error",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Login Redirect",
            "description": "The Frontend Url the User should be redirected to if they need to login.",
            "env_variable": "WEB_LOGIN",
            "default_value": "https:\/\/cp.ree6.de\/login",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Allowed Domains",
            "description": "Domains that are allowed to request the backend.\r\nWe recommend doing *.HOST.TLD, and then putting the backend behind something like API.HOST.TLD!",
            "env_variable": "WEB_DOMAINS",
            "default_value": "https:\/\/*.ree6.de,http:\/\/localhost:[5173,8888]",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        }
    ]
}